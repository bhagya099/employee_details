{"version":3,"sources":["components/Employee.js","components/Search.js","components/EmployeeList.js","App.js","reportWebVitals.js","index.js"],"names":["Employee","props","id","firstName","lastName","skill","contact_number","className","Search","useState","search","setSearch","type","placeholder","value","onChange","e","target","emp_details","reporting_manager","EmployeeList","filter","data","console","log","map","emp","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mMAAaA,EAAW,SAACC,GACvB,IAAQC,EAAmDD,EAAnDC,GAAIC,EAA+CF,EAA/CE,UAAWC,EAAoCH,EAApCG,SAAUC,EAA0BJ,EAA1BI,MAAOC,EAAmBL,EAAnBK,eACxC,OACE,qBAAKC,UAAU,OAAf,SACE,sBAAKA,UAAU,YAAf,UACE,+CAAkBJ,KAClB,8CAAiBC,KACjB,0CAAaC,KAEb,4CAAeC,OALeJ,MCFzBM,EAAS,WACpB,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KAEA,OACE,sBAAKJ,UAAU,YAAf,UACE,uBACEK,KAAK,OACLC,YAAY,gBACZC,MAAOJ,EACPK,SAAU,SAACC,GAAD,OAAOL,EAAUK,EAAEC,OAAOH,UAEtC,wBAAQF,KAAK,SAASL,UAAU,eAAhC,wBCTAW,EAAc,CAClB,CACEhB,GAAI,EACJC,UAAW,OACXC,SAAU,QACVC,MAAO,CAAC,QAAS,OAAQ,eAAgB,YACzCc,kBAAmB,GACnBb,eAAgB,UAElB,CACEJ,GAAI,EACJC,UAAW,MACXC,SAAU,MACVC,MAAO,aACPc,kBAAmB,GACnBb,eAAgB,UAElB,CACEJ,GAAI,EACJC,UAAW,cACXC,SAAU,YACVC,MAAO,CAAC,QAAS,OAAQ,eAAgB,YACzCc,kBAAmB,EACnBb,eAAgB,UAElB,CACEJ,GAAI,EACJC,UAAW,WACXC,SAAU,YACVC,MAAO,aACPc,kBAAmB,EACnBb,eAAgB,WAuCLc,EAnCM,WACnB,MAA4BX,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,OACE,gCACE,cAAC,EAAD,CAAQD,OAAQA,EAAQC,UAAWA,IACnC,oBAAIJ,UAAU,QAAd,mCACA,qBAAKA,UAAU,eAAf,SACGW,EACEG,QAAO,SAACC,GAUP,OATAC,QAAQC,IAAIF,GACZC,QAAQC,IAAId,GAQLY,KAERG,KAAI,SAACC,GAAD,OACH,cAAC,EAAD,CACExB,GAAIwB,EAAIxB,GACRC,UAAWuB,EAAIvB,UACfC,SAAUsB,EAAItB,SACdC,MAAOqB,EAAIrB,MACXc,kBAAmBO,EAAIP,kBACvBb,eAAgBoB,EAAIpB,0BCrDnBqB,G,MATH,WACV,OACE,mCAEE,cAAC,EAAD,QCISC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.93e1fb3c.chunk.js","sourcesContent":["export const Employee = (props) => {\n  const { id, firstName, lastName, skill, contact_number } = props;\n  return (\n    <div className=\"card\">\n      <div className=\"container\" key={id}>\n        <h4>First Name : {firstName}</h4>\n        <h4>Last Name : {lastName}</h4>\n        <h4>Skill : {skill}</h4>\n        {/* <h4>Repoting Manager : {reporting_manager}</h4> */}\n        <h4>Contact : {contact_number}</h4>\n      </div>\n    </div>\n  );\n};\n","import { useState } from \"react\";\n\nexport const Search = () => {\n  const [search, setSearch] = useState(\"\");\n\n  return (\n    <div className=\"SearchBar\">\n      <input\n        type=\"text\"\n        placeholder=\"Enter A skill\"\n        value={search}\n        onChange={(e) => setSearch(e.target.value)}\n      />\n      <button type=\"submit\" className=\"SearchButton\">\n        SEARCH\n      </button>\n    </div>\n  );\n};\n","import { Employee } from \"./Employee\";\n//import Data from \"../MOCK_DATA.json\";\nimport { Search } from \"./Search\";\nimport { useState } from \"react\";\nconst emp_details = [\n  {\n    id: 1,\n    firstName: \"Anil\",\n    lastName: \"Kumar\",\n    skill: [\"HTML,\", \"CSS,\", \"Java Script,\", \"React JS\"],\n    reporting_manager: \"\",\n    contact_number: 98764372,\n  },\n  {\n    id: 2,\n    firstName: \"Ben\",\n    lastName: \"Kim\",\n    skill: \"Salesforce\",\n    reporting_manager: \"\",\n    contact_number: 98764372,\n  },\n  {\n    id: 3,\n    firstName: \"Bhagyashree\",\n    lastName: \"Shakrawar\",\n    skill: [\"HTML,\", \"CSS,\", \"Java Script,\", \"React JS\"],\n    reporting_manager: 1,\n    contact_number: 98764372,\n  },\n  {\n    id: 4,\n    firstName: \"Abhishek\",\n    lastName: \"Shakrawar\",\n    skill: \"Salesforce\",\n    reporting_manager: 2,\n    contact_number: 98764372,\n  },\n];\n\nconst EmployeeList = () => {\n  const [search, setSearch] = useState(\"\");\n  return (\n    <div>\n      <Search search={search} setSearch={setSearch} />\n      <h1 className=\"emph1\">All Employess details</h1>\n      <div className=\"card-section\">\n        {emp_details\n          .filter((data) => {\n            console.log(data);\n            console.log(search);\n            // if (search === \" \") {\n            //   return data;\n            // } else if (\n            //   data.skil.toLowerCase().includes(search.toLowerCase())\n            // ) {\n            //   return data;\n            // }\n            return data;\n          })\n          .map((emp) => (\n            <Employee\n              id={emp.id}\n              firstName={emp.firstName}\n              lastName={emp.lastName}\n              skill={emp.skill}\n              reporting_manager={emp.reporting_manager}\n              contact_number={emp.contact_number}\n            />\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default EmployeeList;\n","import EmployeeList from \"./components/EmployeeList\";\nimport \"../src/index.css\";\n// import { Header } from \"./components/Header\";\n\nconst App = () => {\n  return (\n    <>\n      {/* <Header /> */}\n      <EmployeeList />\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}